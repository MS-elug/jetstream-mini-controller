<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.amadeus.nats</groupId>
  <artifactId>jetstream-mini-controller</artifactId>
  <version>2.1.0-GENAI</version>

  <url>https://github.com/AmadeusITGroup/jetstream-mini-controller</url>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:AmadeusITGroup/jetstream-mini-controller.git</connection>
    <developerConnection>scm:git:git@github.com:AmadeusITGroup/jetstream-mini-controller.git</developerConnection>
    <url>https://github.com/AmadeusITGroup/jetstream-mini-controller</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <maven.deploy.skip>true</maven.deploy.skip>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <maven.source.skip>true</maven.source.skip>
    <failsafe.useModulePath>false</failsafe.useModulePath>

    <quarkus.container-image.build>true</quarkus.container-image.build>
    <quarkus.container-image.push>false</quarkus.container-image.push>
    <quarkus.container-image.name>${project.artifactId}</quarkus.container-image.name>
    <quarkus.container-image.group>openguidou</quarkus.container-image.group>
    <quarkus.container-image.tag>${project.version}</quarkus.container-image.tag>

    <maven.compiler.release>17</maven.compiler.release>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <helm-maven-plugin.version>6.6.0</helm-maven-plugin.version>
    <docker-maven-plugin.version>0.36.1</docker-maven-plugin.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>

    <jnats.version>2.17.5</jnats.version>
    <lombok.version>1.18.32</lombok.version>
    <microprofile-health-api.version>4.0.1</microprofile-health-api.version>
    <quarkus-logging-splunk.version>3.1.3</quarkus-logging-splunk.version>
    <quarkus.version>3.9.3</quarkus.version>
    <apache-collections.version>4.4</apache-collections.version>

    <nats-embedded.version>2.1.2</nats-embedded.version>
    <spring-beans.version>5.3.34</spring-beans.version>
    <mockito-inline.version>5.2.0</mockito-inline.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus.platform</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.nats</groupId>
      <artifactId>jnats</artifactId>
      <version>${jnats.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${apache-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>io.kokuwa.maven</groupId>
      <artifactId>helm-maven-plugin</artifactId>
      <version>${helm-maven-plugin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.health</groupId>
      <artifactId>microprofile-health-api</artifactId>
      <version>${microprofile-health-api.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-inline.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>np.com.madanpokharel.embed</groupId>
      <artifactId>nats-embedded</artifactId>
      <version>${nats-embedded.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring-beans.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Runtime -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-container-image-jib</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.logging.splunk</groupId>
      <artifactId>quarkus-logging-splunk</artifactId>
      <version>${quarkus-logging-splunk.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
	  <groupId>io.quarkus</groupId>
	  <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
	  <scope>runtime</scope>
	</dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
	  <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <preparationGoals>clean deploy</preparationGoals>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
          <remoteTagging>false</remoteTagging>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.quarkus.platform</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
       <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
          <configuration>
            <images>
              <image>
                <name>${quarkus.container-image.group}/${quarkus.container-image.name}:${quarkus.container-image.tag}</name>
                <build />
              </image>
            </images>
          </configuration>
          <executions>
            <execution>
              <id>package-docker-image</id>
              <phase>package</phase>
            </execution>
            <execution>
              <id>push-docker-image</id>
              <phase>deploy</phase>
              <goals>
                <goal>push</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
         <plugin>
          <artifactId>maven-resources-plugin</artifactId>
           <version>${maven-resources-plugin.version}</version>
           <executions>
            <execution>
              <id>filter-helm-chart</id>
              <phase>process-sources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${basedir}/target/helm/filtered/</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/helm/</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>io.kokuwa.maven</groupId>
          <artifactId>helm-maven-plugin</artifactId>
          <version>${helm-maven-plugin.version}</version>
          <extensions>true</extensions>
          <configuration>
            <chartDirectory>${basedir}/target/helm/filtered/</chartDirectory>
            <outputDirectory>${basedir}/target/helm/</outputDirectory>
            <chartVersion>${project.version}</chartVersion>
            <useLocalHelmBinary>true</useLocalHelmBinary>
            <addDefaultRepo>false</addDefaultRepo>
            <skipUpload>true</skipUpload>
          </configuration>
          <executions>
            <!-- Helm packaging does not execute the dependency build pluggin by default -->
            <execution>
              <id>get-chart-dependencies</id>
              <goals>
                <!-- Calls helm dependency build that is like a dependency resolution of the current Chart -->
                <!-- It looks for dependencies in the configured repositories. -->
                <goal>dependency-build</goal>
              </goals>
              <!-- Phase must be after the copy-resources plugin for charts -->
              <phase>process-sources</phase>
            </execution>
            <execution>
              <id>package-chart</id>
              <goals>
                <!-- Creates the output directory + adds the extra repositories to the helm context -->
                <goal>init</goal>
                <!-- Linting is a syntax and templating validation step. It can be strict or not. -->
                <!-- Strict means warnings because errors. -->
                <goal>lint</goal>
                <!-- Packaging is about gather the chart files inside a TGZ file under target/helm/repo -->
                <goal>package</goal>
              </goals>
            </execution>
          </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
      <!-- Push the image using mvn deploy -->
    <profile>
      <id>localDeployment</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <docker.push.registry>registry.127.0.0.1.nip.io:80</docker.push.registry>
        <helm.virtual-repository>localhost:32000</helm.virtual-repository>
        <helm.repository>localhost:32000</helm.repository>
      </properties>
    </profile>
    <profile>
      <id>localDeployment-windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <docker.push.registry>registry.127.0.0.1.nip.io:80</docker.push.registry>
        <helm.virtual-repository>localhost:32000</helm.virtual-repository>
        <helm.repository>localhost:32000</helm.repository>
      </properties>
    </profile>
    <profile>
      <id>CIDeployment</id>
      <properties>
        <!--docker.push.registry>docker.io</docker.push.registry-->
      </properties>
    </profile>
  </profiles>
</project>
